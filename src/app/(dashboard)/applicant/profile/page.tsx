// src/app/(dashboard)/applicant/profile/page.tsx
"use client";

import React, { useState, useEffect } from "react";
import { useAuth } from "@/hooks/useAuth";
import {
  useProfileByUserId,
  useCreateProfile,
  useUpdateProfile,
  profileApi,
} from "@/services/profileService";
import { useActiveDirections } from "@/services/instituteService";
import {
  ApplicantProfile,
  UpdateApplicantProfileDto,
  UserRole,
} from "@/types";
import { toast } from "react-toastify";
import {
  User,
  Save,
  CheckCircle,
  AlertTriangle,
  Calendar,
  Phone,
  Mail,
  MapPin,
  CreditCard,
  FileText,
  Building,
  GraduationCap,
  Edit,
  Eye,
  EyeOff,
  RefreshCw,
  Shield,
  Zap,
  Target,
  BookOpen,
  Award,
  Settings,
  Database,
  Download,
  Upload,
  Trash2,
} from "lucide-react";

// –ö–ª—é—á –¥–ª—è localStorage
const PROFILE_FORM_STORAGE_KEY = "applicant_profile_form_data";

export default function ApplicantProfilePage() {
  const { user } = useAuth();
  const { data: profile, isLoading, refetch } = useProfileByUserId(user?.$id || "");
  const { data: directions = [] } = useActiveDirections();
  const createProfileMutation = useCreateProfile();
  const updateProfileMutation = useUpdateProfile();

  const [isEditing, setIsEditing] = useState(false);
  const [showPassport, setShowPassport] = useState(false);
  const [formData, setFormData] = useState<UpdateApplicantProfileDto>({
    firstName: "",
    lastName: "",
    middleName: "",
    birthDate: "",
    passportNumber: "",
    passportIssueDate: "",
    passportIssuedBy: "",
    citizenship: "–ö—ã—Ä–≥—ã–∑—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞",
    phone: "",
    directionId: "",
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ localStorage –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const savedFormData = localStorage.getItem(PROFILE_FORM_STORAGE_KEY);
    if (savedFormData && !profile) {
      try {
        const parsedData = JSON.parse(savedFormData);
        setFormData(parsedData);
        console.log("–ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage:", parsedData);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:", error);
        localStorage.removeItem(PROFILE_FORM_STORAGE_KEY);
      }
    }
  }, [profile]);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º—ã
  useEffect(() => {
    if (isEditing) {
      localStorage.setItem(PROFILE_FORM_STORAGE_KEY, JSON.stringify(formData));
      console.log("–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage");
    }
  }, [formData, isEditing]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è
  useEffect(() => {
    if (profile) {
      const initialData = {
        firstName: profile.firstName || "",
        lastName: profile.lastName || "",
        middleName: profile.middleName || "",
        birthDate: profile.birthDate ? new Date(profile.birthDate).toISOString().split('T')[0] : "",
        passportNumber: profile.passportNumber || "",
        passportIssueDate: profile.passportIssueDate ? new Date(profile.passportIssueDate).toISOString().split('T')[0] : "",
        passportIssuedBy: profile.passportIssuedBy || "",
        citizenship: profile.citizenship || "–ö—ã—Ä–≥—ã–∑—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞",
        phone: profile.phone || "",
        directionId: profile.directionId || "",
      };
      setFormData(initialData);
      // –û—á–∏—â–∞–µ–º localStorage –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω
      localStorage.removeItem(PROFILE_FORM_STORAGE_KEY);
    } else if (!isLoading && user && !profile) {
      // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç, –≤–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      setIsEditing(true);
    }
  }, [profile, isLoading, user]);

  const handleInputChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
  const loadSavedData = () => {
    const savedFormData = localStorage.getItem(PROFILE_FORM_STORAGE_KEY);
    if (savedFormData) {
      try {
        const parsedData = JSON.parse(savedFormData);
        setFormData(parsedData);
        toast.success("‚úÖ –î–ê–ù–ù–´–ï –ó–ê–ì–†–£–ñ–ï–ù–´ –ò–ó –õ–û–ö–ê–õ–¨–ù–û–ì–û –•–†–ê–ù–ò–õ–ò–©–ê");
      } catch (error) {
        toast.error("‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï –°–û–•–†–ê–ù–ï–ù–ù–´–• –î–ê–ù–ù–´–•");
        localStorage.removeItem(PROFILE_FORM_STORAGE_KEY);
      }
    } else {
      toast.info("‚ÑπÔ∏è –ù–ï–¢ –°–û–•–†–ê–ù–ï–ù–ù–´–• –î–ê–ù–ù–´–•");
    }
  };

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const clearSavedData = () => {
    localStorage.removeItem(PROFILE_FORM_STORAGE_KEY);
    toast.info("üóëÔ∏è –°–û–•–†–ê–ù–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï –û–ß–ò–©–ï–ù–´");
  };

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
  const exportProfileData = () => {
    const exportData = {
      profile: profile,
      formData: formData,
      exportDate: new Date().toISOString(),
    };
    
    const dataStr = JSON.stringify(exportData, null, 2);
    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);
    
    const exportFileDefaultName = `profile_${user?.name || 'user'}_${new Date().toISOString().split('T')[0]}.json`;
    
    const linkElement = document.createElement('a');
    linkElement.setAttribute('href', dataUri);
    linkElement.setAttribute('download', exportFileDefaultName);
    linkElement.click();
    
    toast.success("üìÑ –î–ê–ù–ù–´–ï –ü–†–û–§–ò–õ–Ø –≠–ö–°–ü–û–†–¢–ò–†–û–í–ê–ù–´");
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!user) {
      toast.error("‚ùå –û–®–ò–ë–ö–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò");
      return;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    const errors = profileApi.validateProfileData(formData);
    if (errors.length > 0) {
      errors.forEach(error => toast.error(`‚ùå ${error}`));
      return;
    }

    try {
      if (profile) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        await updateProfileMutation.mutateAsync({
          profileId: profile.$id,
          data: formData,
        });
        toast.success("‚úÖ –ü–†–û–§–ò–õ–¨ –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù");
        
        // –û—á–∏—â–∞–µ–º localStorage –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        localStorage.removeItem(PROFILE_FORM_STORAGE_KEY);
      } else {
        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        if (!formData.directionId) {
          toast.error("‚ùå –í–´–ë–ï–†–ò–¢–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–î–ì–û–¢–û–í–ö–ò");
          return;
        }
        
        // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        const newProfile = await createProfileMutation.mutateAsync({
          userId: user.$id,
          directionId: formData.directionId,
        });
        
        // –ó–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏
        await updateProfileMutation.mutateAsync({
          profileId: newProfile.$id,
          data: formData,
        });
        
        toast.success("‚úÖ –ü–†–û–§–ò–õ–¨ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù –ò –ó–ê–ü–û–õ–ù–ï–ù");
        
        // –û—á–∏—â–∞–µ–º localStorage –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
        localStorage.removeItem(PROFILE_FORM_STORAGE_KEY);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        await refetch();
      }

      setIsEditing(false);
    } catch (error: any) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:", error);
      
      // –î–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      let errorMessage = "–ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê";
      
      if (error?.message) {
        errorMessage = error.message;
      } else if (error?.code) {
        switch(error.code) {
          case 401:
            errorMessage = "–ù–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù - –í–û–ô–î–ò–¢–ï –í –°–ò–°–¢–ï–ú–£";
            break;
          case 403:
            errorMessage = "–ù–ï–¢ –î–û–°–¢–£–ü–ê –ö –û–ü–ï–†–ê–¶–ò–ò";
            break;
          case 404:
            errorMessage = "–†–ï–°–£–†–° –ù–ï –ù–ê–ô–î–ï–ù";
            break;
          case 409:
            errorMessage = "–ö–û–ù–§–õ–ò–ö–¢ –î–ê–ù–ù–´–•";
            break;
          case 500:
            errorMessage = "–û–®–ò–ë–ö–ê –°–ï–†–í–ï–†–ê";
            break;
          default:
            errorMessage = `–û–®–ò–ë–ö–ê ${error.code}`;
        }
      }
      
      toast.error(`‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –°–û–•–†–ê–ù–ï–ù–ò–ò: ${errorMessage}`);
      toast.info("üíæ –î–ê–ù–ù–´–ï –°–û–•–†–ê–ù–ï–ù–´ –õ–û–ö–ê–õ–¨–ù–û –î–õ–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø");
    }
  };

  const getSelectedDirection = () => {
    return directions.find(d => d.$id === formData.directionId);
  };

  const getProfileCompletionPercentage = () => {
    const totalFields = 9; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    let filledFields = 0;

    if (formData.firstName?.trim()) filledFields++;
    if (formData.lastName?.trim()) filledFields++;
    if (formData.birthDate) filledFields++;
    if (formData.passportNumber?.trim()) filledFields++;
    if (formData.passportIssueDate) filledFields++;
    if (formData.passportIssuedBy?.trim()) filledFields++;
    if (formData.citizenship?.trim()) filledFields++;
    if (formData.phone?.trim()) filledFields++;
    if (formData.directionId) filledFields++;

    return Math.round((filledFields / totalFields) * 100);
  };

  const formatDate = (dateString: string) => {
    if (!dateString) return "–ù–ï –£–ö–ê–ó–ê–ù–û";
    return new Date(dateString).toLocaleDateString("ru-RU");
  };

  const formatPassport = (passportNumber: string) => {
    if (!showPassport) {
      return passportNumber.replace(/./g, "‚óè");
    }
    return passportNumber;
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
  const hasSavedData = () => {
    return localStorage.getItem(PROFILE_FORM_STORAGE_KEY) !== null;
  };

  if (!user || user.role !== UserRole.APPLICANT) {
    return (
      <div className="min-h-screen bg-slate-900 text-white">
        <div className="p-6 max-w-7xl mx-auto">
          <div className="text-center">
            <AlertTriangle className="h-16 w-16 text-red-400 mx-auto mb-4" />
            <h2 className="text-2xl font-mono font-bold text-white mb-2 uppercase">
              –û–®–ò–ë–ö–ê –î–û–°–¢–£–ü–ê
            </h2>
            <p className="text-slate-300 font-mono">–î–û–°–¢–£–ü –¢–û–õ–¨–ö–û –î–õ–Ø –ê–ë–ò–¢–£–†–ò–ï–ù–¢–û–í</p>
          </div>
        </div>
      </div>
    );
  }

  if (isLoading) {
    return (
      <div className="min-h-screen bg-slate-900 text-white">
        <div className="p-6 max-w-7xl mx-auto">
          <div className="flex justify-center items-center h-64">
            <div className="w-8 h-8 border-2 border-blue-400 border-t-transparent animate-spin rounded-full"></div>
            <span className="ml-3 text-slate-300 font-mono">–ó–ê–ì–†–£–ó–ö–ê –ü–†–û–§–ò–õ–Ø...</span>
          </div>
        </div>
      </div>
    );
  }

  const completionPercentage = getProfileCompletionPercentage();
  const selectedDirection = getSelectedDirection();

  return (
    <div className="min-h-screen bg-slate-900 text-white">
      <div className="p-6 max-w-4xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8 border-b-2 border-slate-700 pb-6">
          <div className="flex items-center justify-between">
            <div>
              <div className="flex items-center gap-3 mb-2">
                <User className="h-8 w-8 text-green-400" />
                <h1 className="text-3xl font-mono font-bold text-white uppercase tracking-wide">
                  –ú–û–ô –ü–†–û–§–ò–õ–¨ –ê–ë–ò–¢–£–†–ò–ï–ù–¢–ê
                </h1>
              </div>
              <p className="text-slate-300 font-mono uppercase">
                –ê–ù–ö–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø –£–ß–ê–°–¢–ò–Ø –í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò
              </p>
            </div>

            <div className="flex gap-3">
              <button
                onClick={() => refetch()}
                disabled={isLoading}
                className="flex items-center gap-2 px-4 py-2 text-slate-300 bg-slate-800 border-2 border-slate-600 font-mono font-bold uppercase disabled:opacity-50"
              >
                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />
                –û–ë–ù–û–í–ò–¢–¨
              </button>

              {hasSavedData() && !isEditing && (
                <button
                  onClick={loadSavedData}
                  className="flex items-center gap-2 px-4 py-2 bg-orange-800 text-orange-200 border-2 border-orange-600 font-mono font-bold uppercase"
                >
                  <Upload className="h-4 w-4" />
                  –ó–ê–ì–†–£–ó–ò–¢–¨ –°–û–•–†–ê–ù–ï–ù–ù–û–ï
                </button>
              )}

              <button
                onClick={exportProfileData}
                className="flex items-center gap-2 px-4 py-2 bg-purple-800 text-purple-200 border-2 border-purple-600 font-mono font-bold uppercase"
              >
                <Download className="h-4 w-4" />
                –≠–ö–°–ü–û–†–¢
              </button>

              {!isEditing && profile && (
                <button
                  onClick={() => setIsEditing(true)}
                  className="flex items-center gap-2 px-4 py-2 bg-blue-800 text-blue-200 border-2 border-blue-600 font-mono font-bold uppercase"
                >
                  <Edit className="h-4 w-4" />
                  –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨
                </button>
              )}
            </div>
          </div>
        </div>

        {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
        {hasSavedData() && (
          <div className="mb-8 bg-blue-900 border-2 border-blue-600 p-6">
            <div className="flex items-start justify-between">
              <div className="flex items-start gap-3">
                <Download className="h-5 w-5 text-blue-400 mt-0.5" />
                <div>
                  <h3 className="text-sm font-mono font-bold text-blue-200 mb-2 uppercase">
                    –ù–ê–ô–î–ï–ù–´ –°–û–•–†–ê–ù–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï
                  </h3>
                  <p className="text-sm text-blue-300 font-mono mb-3">
                    –í –õ–û–ö–ê–õ–¨–ù–û–ú –•–†–ê–ù–ò–õ–ò–©–ï –ï–°–¢–¨ –ù–ï–°–û–•–†–ê–ù–ï–ù–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –§–û–†–ú–´.
                    –ó–ê–ì–†–£–ó–ò–¢–¨ –ò–• –ò–õ–ò –û–ß–ò–°–¢–ò–¢–¨?
                  </p>
                  <div className="flex gap-3">
                    <button
                      onClick={loadSavedData}
                      className="flex items-center gap-2 px-3 py-2 bg-blue-800 text-blue-200 border border-blue-600 font-mono font-bold text-xs uppercase"
                    >
                      <Upload className="h-3 w-3" />
                      –ó–ê–ì–†–£–ó–ò–¢–¨
                    </button>
                    <button
                      onClick={clearSavedData}
                      className="flex items-center gap-2 px-3 py-2 bg-red-800 text-red-200 border border-red-600 font-mono font-bold text-xs uppercase"
                    >
                      <Trash2 className="h-3 w-3" />
                      –û–ß–ò–°–¢–ò–¢–¨
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ñ–∏–ª—è */}
        <div className="mb-8">
          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-lg font-mono font-bold text-white uppercase flex items-center gap-2">
                <Target className="h-5 w-5 text-orange-400" />
                –°–¢–ê–¢–£–° –ü–†–û–§–ò–õ–Ø
              </h3>
              <div className="flex items-center gap-2">
                {profile?.isProfileComplete ? (
                  <span className="px-3 py-1 text-sm font-mono font-bold bg-green-800 text-green-200 border-2 border-green-600 uppercase">
                    <CheckCircle className="inline h-4 w-4 mr-1" />
                    –ó–ê–ü–û–õ–ù–ï–ù
                  </span>
                ) : (
                  <span className="px-3 py-1 text-sm font-mono font-bold bg-yellow-800 text-yellow-200 border-2 border-yellow-600 uppercase">
                    <AlertTriangle className="inline h-4 w-4 mr-1" />
                    –¢–†–ï–ë–£–ï–¢ –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø
                  </span>
                )}
              </div>
            </div>

            <div className="space-y-4">
              <div>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-mono font-bold text-slate-300 uppercase">
                    –ó–ê–ü–û–õ–ù–ï–ù–û –ü–û–õ–ï–ô:
                  </span>
                  <span className="text-sm font-mono font-bold text-white">
                    {completionPercentage}%
                  </span>
                </div>
                <div className="w-full bg-slate-700 h-3 border-2 border-slate-600">
                  <div
                    className={`h-full transition-all duration-300 ${
                      completionPercentage === 100 ? 'bg-green-500' : 
                      completionPercentage >= 70 ? 'bg-blue-500' : 
                      completionPercentage >= 40 ? 'bg-yellow-500' : 'bg-red-500'
                    }`}
                    style={{ width: `${completionPercentage}%` }}
                  ></div>
                </div>
              </div>

              {!profile?.isProfileComplete && (
                <div className="bg-orange-900 border-2 border-orange-600 p-4">
                  <div className="flex items-start gap-3">
                    <AlertTriangle className="h-5 w-5 text-orange-400 mt-0.5" />
                    <div>
                      <h4 className="text-sm font-mono font-bold text-orange-200 mb-1 uppercase">
                        –í–ù–ò–ú–ê–ù–ò–ï!
                      </h4>
                      <p className="text-sm text-orange-300 font-mono">
                        –î–õ–Ø –ü–†–û–•–û–ñ–î–ï–ù–ò–Ø –¢–ï–°–¢–û–í –ù–ï–û–ë–•–û–î–ò–ú–û –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–ü–û–õ–ù–ò–¢–¨ –ê–ù–ö–ï–¢–£.
                        –ù–ï–ó–ê–ü–û–õ–ù–ï–ù–ù–´–ô –ü–†–û–§–ò–õ–¨ –û–ì–†–ê–ù–ò–ß–ò–í–ê–ï–¢ –î–û–°–¢–£–ü –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ.
                      </p>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ */}
        <form onSubmit={handleSubmit} className="space-y-8">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <h3 className="text-lg font-mono font-bold text-white mb-6 uppercase border-b border-slate-600 pb-2 flex items-center gap-2">
              <FileText className="h-5 w-5 text-blue-400" />
              I. –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –§–ê–ú–ò–õ–ò–Ø *
                </label>
                {isEditing ? (
                  <input
                    type="text"
                    name="lastName"
                    value={formData.lastName}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400 uppercase focus:border-blue-500 focus:outline-none"
                    placeholder="–í–í–ï–î–ò–¢–ï –§–ê–ú–ò–õ–ò–Æ"
                    required
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono">
                    {formData.lastName || "–ù–ï –£–ö–ê–ó–ê–ù–û"}
                  </div>
                )}
              </div>

              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –ò–ú–Ø *
                </label>
                {isEditing ? (
                  <input
                    type="text"
                    name="firstName"
                    value={formData.firstName}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400 uppercase focus:border-blue-500 focus:outline-none"
                    placeholder="–í–í–ï–î–ò–¢–ï –ò–ú–Ø"
                    required
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono">
                    {formData.firstName || "–ù–ï –£–ö–ê–ó–ê–ù–û"}
                  </div>
                )}
              </div>

              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –û–¢–ß–ï–°–¢–í–û
                </label>
                {isEditing ? (
                  <input
                    type="text"
                    name="middleName"
                    value={formData.middleName}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400 uppercase focus:border-blue-500 focus:outline-none"
                    placeholder="–í–í–ï–î–ò–¢–ï –û–¢–ß–ï–°–¢–í–û (–ï–°–õ–ò –ï–°–¢–¨)"
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono">
                    {formData.middleName || "–ù–ï –£–ö–ê–ó–ê–ù–û"}
                  </div>
                )}
              </div>

              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –î–ê–¢–ê –†–û–ñ–î–ï–ù–ò–Ø *
                </label>
                {isEditing ? (
                  <input
                    type="date"
                    name="birthDate"
                    value={formData.birthDate}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono focus:border-blue-500 focus:outline-none"
                    required
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono flex items-center gap-2">
                    <Calendar className="h-4 w-4 text-slate-400" />
                    {formatDate(formData.birthDate)}
                  </div>
                )}
              </div>

              <div className="md:col-span-2">
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –ì–†–ê–ñ–î–ê–ù–°–¢–í–û *
                </label>
                {isEditing ? (
                  <select
                    name="citizenship"
                    value={formData.citizenship}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono focus:border-blue-500 focus:outline-none"
                    required
                  >
                    <option value="–ö—ã—Ä–≥—ã–∑—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞">–ö–´–†–ì–´–ó–°–ö–ê–Ø –†–ï–°–ü–£–ë–õ–ò–ö–ê</option>
                    <option value="–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è">–†–û–°–°–ò–ô–°–ö–ê–Ø –§–ï–î–ï–†–ê–¶–ò–Ø</option>
                    <option value="–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–µ">–ò–ù–û–°–¢–†–ê–ù–ù–û–ï –ì–†–ê–ñ–î–ê–ù–°–¢–í–û</option>
                  </select>
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono">
                    {formData.citizenship || "–ù–ï –£–ö–ê–ó–ê–ù–û"}
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* –ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-lg font-mono font-bold text-white uppercase border-b border-slate-600 pb-2 flex items-center gap-2">
                <CreditCard className="h-5 w-5 text-red-400" />
                II. –ü–ê–°–ü–û–†–¢–ù–´–ï –î–ê–ù–ù–´–ï
              </h3>
              
              {!isEditing && formData.passportNumber && (
                <button
                  type="button"
                  onClick={() => setShowPassport(!showPassport)}
                  className="flex items-center gap-2 px-3 py-1 text-xs text-slate-300 border border-slate-600 font-mono uppercase hover:bg-slate-700"
                >
                  {showPassport ? <EyeOff className="h-3 w-3" /> : <Eye className="h-3 w-3" />}
                  {showPassport ? "–°–ö–†–´–¢–¨" : "–ü–û–ö–ê–ó–ê–¢–¨"}
                </button>
              )}
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –°–ï–†–ò–Ø –ò –ù–û–ú–ï–† –ü–ê–°–ü–û–†–¢–ê *
                </label>
                {isEditing ? (
                  <input
                    type="text"
                    name="passportNumber"
                    value={formData.passportNumber}
                    onChange={handleInputChange}
                    placeholder="AN1234567"
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400 focus:border-blue-500 focus:outline-none"
                    required
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono">
                    {formData.passportNumber ? formatPassport(formData.passportNumber) : "–ù–ï –£–ö–ê–ó–ê–ù–û"}
                  </div>
                )}
                <p className="mt-1 text-xs text-slate-400 font-mono">
                  –§–û–†–ú–ê–¢ –ö–´–†–ì–´–ó–°–ö–û–ì–û –ü–ê–°–ü–û–†–¢–ê: AN1234567
                </p>
              </div>

              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –î–ê–¢–ê –í–´–î–ê–ß–ò *
                </label>
                {isEditing ? (
                  <input
                    type="date"
                    name="passportIssueDate"
                    value={formData.passportIssueDate}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono focus:border-blue-500 focus:outline-none"
                    required
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono">
                    {formatDate(formData.passportIssueDate)}
                  </div>
                )}
              </div>

              <div className="md:col-span-2">
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –ö–ï–ú –í–´–î–ê–ù *
                </label>
                {isEditing ? (
                  <textarea
                    name="passportIssuedBy"
                    value={formData.passportIssuedBy}
                    onChange={handleInputChange}
                    rows={2}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400 uppercase focus:border-blue-500 focus:outline-none"
                    placeholder="–£–ö–ê–ñ–ò–¢–ï –û–†–ì–ê–ù, –í–´–î–ê–í–®–ò–ô –ü–ê–°–ü–û–†–¢"
                    required
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono min-h-[60px]">
                    {formData.passportIssuedBy || "–ù–ï –£–ö–ê–ó–ê–ù–û"}
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <h3 className="text-lg font-mono font-bold text-white mb-6 uppercase border-b border-slate-600 pb-2 flex items-center gap-2">
              <Phone className="h-5 w-5 text-green-400" />
              III. –ö–û–ù–¢–ê–ö–¢–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê *
                </label>
                {isEditing ? (
                  <input
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleInputChange}
                    placeholder="+996 (999) 123-45-67"
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400 focus:border-blue-500 focus:outline-none"
                    required
                  />
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono flex items-center gap-2">
                    <Phone className="h-4 w-4 text-slate-400" />
                    {formData.phone || "–ù–ï –£–ö–ê–ó–ê–ù–û"}
                  </div>
                )}
                <p className="mt-1 text-xs text-slate-400 font-mono">
                  –§–û–†–ú–ê–¢: +996 (999) 123-45-67
                </p>
              </div>

              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  EMAIL –ê–î–†–ï–°
                </label>
                <div className="px-3 py-2 border-2 border-slate-600 bg-slate-600 text-slate-300 font-mono flex items-center gap-2">
                  <Mail className="h-4 w-4 text-slate-400" />
                  {user.email}
                  <span className="text-xs bg-slate-500 px-2 py-1 uppercase">–°–ò–°–¢–ï–ú–ù–´–ô</span>
                </div>
                <p className="mt-1 text-xs text-slate-400 font-mono">
                  EMAIL –ù–ï–õ–¨–ó–Ø –ò–ó–ú–ï–ù–ò–¢–¨ - –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø –î–õ–Ø –í–•–û–î–ê –í –°–ò–°–¢–ï–ú–£
                </p>
              </div>
            </div>
          </div>

          {/* –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ */}
          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <h3 className="text-lg font-mono font-bold text-white mb-6 uppercase border-b border-slate-600 pb-2 flex items-center gap-2">
              <GraduationCap className="h-5 w-5 text-purple-400" />
              IV. –ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–î–ì–û–¢–û–í–ö–ò
            </h3>

            <div className="space-y-4">
              <div>
                <label className="block text-sm font-mono font-bold text-slate-300 mb-2 uppercase">
                  –í–´–ë–†–ê–ù–ù–û–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï *
                </label>
                {isEditing ? (
                  <select
                    name="directionId"
                    value={formData.directionId}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono focus:border-blue-500 focus:outline-none"
                    required
                  >
                    <option value="">–í–´–ë–ï–†–ò–¢–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–î–ì–û–¢–û–í–ö–ò</option>
                    {directions.map((direction) => (
                      <option key={direction.$id} value={direction.$id}>
                        {direction.name} ({direction.code}) - {direction.institute?.name}
                      </option>
                    ))}
                  </select>
                ) : (
                  <div className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono">
                    {selectedDirection ? (
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <BookOpen className="h-4 w-4 text-purple-400" />
                          <span className="font-bold">{selectedDirection.name}</span>
                          <span className="text-slate-400">({selectedDirection.code})</span>
                        </div>
                        <div className="flex items-center gap-2 text-sm text-slate-400">
                          <Building className="h-4 w-4" />
                          <span>{selectedDirection.institute?.name}</span>
                        </div>
                        {selectedDirection.description && (
                          <p className="text-sm text-slate-300 mt-2">
                            {selectedDirection.description}
                          </p>
                        )}
                      </div>
                    ) : (
                      "–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï –í–´–ë–†–ê–ù–û"
                    )}
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          {isEditing && (
            <div className="flex gap-4 pt-6 border-t-2 border-slate-700">
              <button
                type="button"
                onClick={() => {
                  setIsEditing(false);
                  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                  if (profile) {
                    setFormData({
                      firstName: profile.firstName || "",
                      lastName: profile.lastName || "",
                      middleName: profile.middleName || "",
                      birthDate: profile.birthDate ? new Date(profile.birthDate).toISOString().split('T')[0] : "",
                      passportNumber: profile.passportNumber || "",
                      passportIssueDate: profile.passportIssueDate ? new Date(profile.passportIssueDate).toISOString().split('T')[0] : "",
                      passportIssuedBy: profile.passportIssuedBy || "",
                      citizenship: profile.citizenship || "–ö—ã—Ä–≥—ã–∑—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞",
                      phone: profile.phone || "",
                      directionId: profile.directionId || "",
                    });
                  }
                }}
                className="flex-1 px-6 py-3 text-slate-300 bg-slate-700 border-2 border-slate-600 font-mono font-bold uppercase hover:bg-slate-600"
              >
                –û–¢–ú–ï–ù–ê
              </button>
              <button
                type="submit"
                disabled={updateProfileMutation.isPending || createProfileMutation.isPending}
                className="flex-1 flex items-center justify-center gap-2 px-6 py-3 text-green-200 bg-green-800 border-2 border-green-600 disabled:opacity-50 font-mono font-bold uppercase hover:bg-green-700 disabled:hover:bg-green-800"
              >
                <Save className="h-4 w-4" />
                {updateProfileMutation.isPending || createProfileMutation.isPending ? "–°–û–•–†–ê–ù–ï–ù–ò–ï..." : "–°–û–•–†–ê–ù–ò–¢–¨ –ü–†–û–§–ò–õ–¨"}
              </button>
            </div>
          )}
        </form>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
        <div className="mt-8 bg-blue-900 border-2 border-blue-600 p-6">
          <div className="flex items-start gap-3">
            <Shield className="h-5 w-5 text-blue-400 mt-0.5" />
            <div>
              <h3 className="text-sm font-mono font-bold text-blue-200 mb-2 uppercase">
                –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ –ò –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–û–°–¢–¨
              </h3>
              <ul className="text-sm text-blue-300 font-mono space-y-1">
                <li>‚Ä¢ –í–°–ï –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –ó–ê–©–ò–©–ï–ù–´ –ò –ò–°–ü–û–õ–¨–ó–£–Æ–¢–°–Ø –¢–û–õ–¨–ö–û –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø</li>
                <li>‚Ä¢ –ü–ê–°–ü–û–†–¢–ù–´–ï –î–ê–ù–ù–´–ï –°–ö–†–´–¢–´ –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ –ò –î–û–°–¢–£–ü–ù–´ –¢–û–õ–¨–ö–û –í–ê–ú</li>
                <li>‚Ä¢ –ü–†–û–§–ò–õ–¨ –ú–û–ñ–ù–û –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –í –õ–Æ–ë–û–ï –í–†–ï–ú–Ø</li>
                <li>‚Ä¢ –ó–ê–ü–û–õ–ù–ï–ù–ù–´–ô –ü–†–û–§–ò–õ–¨ –ù–ï–û–ë–•–û–î–ò–ú –î–õ–Ø –î–û–°–¢–£–ü–ê –ö –¢–ï–°–¢–ê–ú</li>
                <li>‚Ä¢ –î–ê–ù–ù–´–ï –§–û–†–ú–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –°–û–•–†–ê–ù–Ø–Æ–¢–°–Ø –õ–û–ö–ê–õ–¨–ù–û –ü–†–ò –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ò</li>
                <li>‚Ä¢ –ü–†–ò –í–û–ó–ù–ò–ö–ù–û–í–ï–ù–ò–ò –ü–†–û–ë–õ–ï–ú –û–ë–†–ê–¢–ò–¢–ï–°–¨ –ö –ö–£–†–ê–¢–û–†–£</li>
              </ul>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
        {profile && (
          <div className="mt-8 bg-slate-800 border-2 border-slate-600 p-6">
            <h3 className="text-lg font-mono font-bold text-white mb-4 uppercase border-b border-slate-600 pb-2 flex items-center gap-2">
              <Database className="h-5 w-5 text-orange-400" />
              –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–†–û–§–ò–õ–ï
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="space-y-3">
                <h4 className="font-mono font-bold text-white uppercase border-b border-slate-600 pb-2">
                  –°–ò–°–¢–ï–ú–ù–´–ï –î–ê–ù–ù–´–ï:
                </h4>
                <div className="space-y-2 text-sm text-slate-300 font-mono">
                  <div className="flex justify-between border-b border-slate-700 pb-1">
                    <span>–°–û–ó–î–ê–ù:</span>
                    <span className="font-bold text-white">
                      {formatDate(profile.$createdAt)}
                    </span>
                  </div>
                  <div className="flex justify-between border-b border-slate-700 pb-1">
                    <span>–û–ë–ù–û–í–õ–ï–ù:</span>
                    <span className="font-bold text-white">
                      {profile.updatedAt ? formatDate(profile.updatedAt) : "–ù–ï –û–ë–ù–û–í–õ–Ø–õ–°–Ø"}
                    </span>
                  </div>
                  <div className="flex justify-between border-b border-slate-700 pb-1">
                    <span>ID –ü–†–û–§–ò–õ–Ø:</span>
                    <span className="font-bold text-white text-xs">
                      {profile.$id.substring(0, 8)}...
                    </span>
                  </div>
                </div>
              </div>

              <div className="space-y-3">
                <h4 className="font-mono font-bold text-white uppercase border-b border-slate-600 pb-2">
                  –°–¢–ê–¢–£–° –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø:
                </h4>
                <div className="space-y-2 text-sm text-slate-300 font-mono">
                  <div className="flex justify-between border-b border-slate-700 pb-1">
                    <span>–ó–ê–ü–û–õ–ù–ï–ù–û:</span>
                    <span className="font-bold text-white">{completionPercentage}%</span>
                  </div>
                  <div className="flex justify-between border-b border-slate-700 pb-1">
                    <span>–°–¢–ê–¢–£–°:</span>
                    <span className={`font-bold ${profile.isProfileComplete ? 'text-green-400' : 'text-yellow-400'}`}>
                      {profile.isProfileComplete ? '–ó–ê–í–ï–†–®–ï–ù' : '–¢–†–ï–ë–£–ï–¢ –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø'}
                    </span>
                  </div>
                  <div className="flex justify-between border-b border-slate-700 pb-1">
                    <span>–î–û–°–¢–£–ü –ö –¢–ï–°–¢–ê–ú:</span>
                    <span className={`font-bold ${profile.isProfileComplete ? 'text-green-400' : 'text-red-400'}`}>
                      {profile.isProfileComplete ? '–†–ê–ó–†–ï–®–ï–ù' : '–û–ì–†–ê–ù–ò–ß–ï–ù'}
                    </span>
                  </div>
                </div>
              </div>

              <div className="space-y-3">
                <h4 className="font-mono font-bold text-white uppercase border-b border-slate-600 pb-2">
                  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
                </h4>
                <div className="space-y-1 text-sm text-slate-300 font-mono">
                  {!profile.isProfileComplete && (
                    <>
                      <div className="text-yellow-400">‚Ä¢ –ó–ê–ü–û–õ–ù–ò–¢–ï –í–°–ï –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø</div>
                      <div className="text-yellow-400">‚Ä¢ –ü–†–û–í–ï–†–¨–¢–ï –ü–†–ê–í–ò–õ–¨–ù–û–°–¢–¨ –î–ê–ù–ù–´–•</div>
                    </>
                  )}
                  {profile.isProfileComplete && (
                    <>
                      <div className="text-green-400">‚Ä¢ –ü–†–û–§–ò–õ–¨ –ó–ê–ü–û–õ–ù–ï–ù –ü–û–õ–ù–û–°–¢–¨–Æ</div>
                      <div className="text-green-400">‚Ä¢ –ú–û–ñ–ï–¢–ï –ü–†–û–•–û–î–ò–¢–¨ –¢–ï–°–¢–´</div>
                    </>
                  )}
                  <div className="text-blue-400">‚Ä¢ –†–ï–ì–£–õ–Ø–†–ù–û –ü–†–û–í–ï–†–Ø–ô–¢–ï –ê–ö–¢–£–ê–õ–¨–ù–û–°–¢–¨</div>
                  <div className="text-blue-400">‚Ä¢ –û–ë–†–ê–©–ê–ô–¢–ï–°–¨ –ö –ö–£–†–ê–¢–û–†–ê–ú –ü–†–ò –í–û–ü–†–û–°–ê–•</div>
                  <div className="text-purple-400">‚Ä¢ –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –≠–ö–°–ü–û–†–¢ –î–õ–Ø –†–ï–ó–ï–†–í–ù–û–ì–û –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø</div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}