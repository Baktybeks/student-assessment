// src/app/(dashboard)/admin/curators/page.tsx
"use client";

import React, { useState } from "react";
import {
  useCurators,
  useCreateUser,
  useActivateUser,
  useDeactivateUser,
  useBlockUser,
  useUnblockUser,
} from "@/services/authService";
import { useAuth } from "@/hooks/useAuth";
import { User, UserRole } from "@/types";
import { toast } from "react-toastify";
import {
  Users,
  UserPlus,
  UserCheck,
  UserX,
  Mail,
  Calendar,
  Search,
  RefreshCw,
  Eye,
  Edit,
  Trash2,
  Shield,
  ShieldOff,
  AlertTriangle,
  CheckCircle,
  Clock,
  Filter,
  Plus,
} from "lucide-react";

export default function CuratorsPage() {
  const { user: currentUser } = useAuth();
  const { data: curators = [], isLoading, refetch } = useCurators();
  const createUserMutation = useCreateUser();
  const activateUserMutation = useActivateUser();
  const deactivateUserMutation = useDeactivateUser();
  const blockUserMutation = useBlockUser();
  const unblockUserMutation = useUnblockUser();

  const [searchTerm, setSearchTerm] = useState("");
  const [statusFilter, setStatusFilter] = useState<
    "ALL" | "ACTIVE" | "INACTIVE" | "BLOCKED"
  >("ALL");
  const [showCreateForm, setShowCreateForm] = useState(false);
  const [newCuratorData, setNewCuratorData] = useState({
    name: "",
    email: "",
    password: "",
  });

  const filteredCurators = curators.filter((curator) => {
    const matchesSearch =
      curator.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      curator.email.toLowerCase().includes(searchTerm.toLowerCase());

    const matchesStatus =
      statusFilter === "ALL" ||
      (statusFilter === "ACTIVE" && curator.isActive && !curator.isBlocked) ||
      (statusFilter === "INACTIVE" &&
        !curator.isActive &&
        !curator.isBlocked) ||
      (statusFilter === "BLOCKED" && curator.isBlocked);

    return matchesSearch && matchesStatus;
  });

  const curatorStats = {
    total: curators.length,
    active: curators.filter((c) => c.isActive && !c.isBlocked).length,
    inactive: curators.filter((c) => !c.isActive && !c.isBlocked).length,
    blocked: curators.filter((c) => c.isBlocked).length,
  };

  const handleCreateCurator = async (e: React.FormEvent) => {
    e.preventDefault();

    if (
      !newCuratorData.name ||
      !newCuratorData.email ||
      !newCuratorData.password
    ) {
      toast.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    if (!currentUser) {
      toast.error("–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏");
      return;
    }

    try {
      await createUserMutation.mutateAsync({
        name: newCuratorData.name,
        email: newCuratorData.email,
        password: newCuratorData.password,
        role: UserRole.CURATOR,
        createdBy: currentUser.$id,
      });

      toast.success(`‚úÖ –ö—É—Ä–∞—Ç–æ—Ä ${newCuratorData.name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`);
      setShowCreateForm(false);
      setNewCuratorData({ name: "", email: "", password: "" });
    } catch (error) {
      toast.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞: ${(error as Error).message}`
      );
    }
  };

  const handleActivate = async (curatorId: string, curatorName: string) => {
    try {
      await activateUserMutation.mutateAsync(curatorId);
      toast.success(`‚úÖ –ö—É—Ä–∞—Ç–æ—Ä ${curatorName} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`);
    } catch (error) {
      toast.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${(error as Error).message}`);
    }
  };

  const handleDeactivate = async (curatorId: string, curatorName: string) => {
    if (window.confirm(`–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä–∞—Ç–æ—Ä–∞ ${curatorName}?`)) {
      try {
        await deactivateUserMutation.mutateAsync(curatorId);
        toast.warning(`‚ö†Ô∏è –ö—É—Ä–∞—Ç–æ—Ä ${curatorName} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`);
      } catch (error) {
        toast.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${(error as Error).message}`);
      }
    }
  };

  const handleBlock = async (curatorId: string, curatorName: string) => {
    if (
      window.confirm(
        `–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä–∞—Ç–æ—Ä–∞ ${curatorName}? –û–Ω –ø–æ—Ç–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ.`
      )
    ) {
      try {
        await blockUserMutation.mutateAsync(curatorId);
        toast.warning(`üö´ –ö—É—Ä–∞—Ç–æ—Ä ${curatorName} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
      } catch (error) {
        toast.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ: ${(error as Error).message}`);
      }
    }
  };

  const handleUnblock = async (curatorId: string, curatorName: string) => {
    try {
      await unblockUserMutation.mutateAsync(curatorId);
      toast.success(`‚úÖ –ö—É—Ä–∞—Ç–æ—Ä ${curatorName} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
    } catch (error) {
      toast.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ: ${(error as Error).message}`);
    }
  };

  const getStatusBadge = (curator: User) => {
    if (curator.isBlocked) {
      return (
        <span className="px-2 py-1 text-xs font-mono font-bold bg-red-800 text-red-200 border border-red-600 uppercase">
          –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù
        </span>
      );
    }
    if (curator.isActive) {
      return (
        <span className="px-2 py-1 text-xs font-mono font-bold bg-green-800 text-green-200 border border-green-600 uppercase">
          –ê–ö–¢–ò–í–ï–ù
        </span>
      );
    }
    return (
      <span className="px-2 py-1 text-xs font-mono font-bold bg-yellow-800 text-yellow-200 border border-yellow-600 uppercase">
        –ù–ï–ê–ö–¢–ò–í–ï–ù
      </span>
    );
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString("ru-RU", {
      year: "numeric",
      month: "short",
      day: "numeric",
    });
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-slate-900 text-white p-6 max-w-7xl mx-auto">
        <div className="flex justify-center items-center h-64">
          <div className="h-8 w-8 border-2 border-blue-400 border-t-transparent"></div>
          <span className="ml-3 text-slate-300 font-mono">–ó–ê–ì–†–£–ó–ö–ê –ö–£–†–ê–¢–û–†–û–í...</span>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-slate-900 text-white">
      <div className="p-6 max-w-7xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8 border-b border-slate-700 pb-6">
          <div className="flex items-center justify-between">
            <div>
              <div className="flex items-center gap-3 mb-2">
                <Users className="h-8 w-8 text-blue-400" />
                <h1 className="text-3xl font-mono font-bold text-white uppercase tracking-wide">
                  –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–£–†–ê–¢–û–†–ê–ú–ò
                </h1>
              </div>
              <p className="text-slate-300 font-mono">
                –°–û–ó–î–ê–ù–ò–ï –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–£–†–ê–¢–û–†–ê–ú–ò –°–ò–°–¢–ï–ú–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
              </p>
            </div>

            <button
              onClick={() => setShowCreateForm(true)}
              className="flex items-center gap-2 px-4 py-2 bg-blue-700 text-white border-2 border-blue-600 font-mono font-bold uppercase"
            >
              <Plus className="h-4 w-4" />
              –°–û–ó–î–ê–¢–¨ –ö–£–†–ê–¢–û–†–ê
            </button>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <Users className="h-8 w-8 text-blue-400" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-mono font-bold text-slate-300 uppercase">
                  –í–°–ï–ì–û –ö–£–†–ê–¢–û–†–û–í
                </p>
                <p className="text-2xl font-mono font-bold text-white">
                  {curatorStats.total}
                </p>
              </div>
            </div>
          </div>

          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <CheckCircle className="h-8 w-8 text-green-400" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-mono font-bold text-slate-300 uppercase">
                  –ê–ö–¢–ò–í–ù–´–ï
                </p>
                <p className="text-2xl font-mono font-bold text-white">
                  {curatorStats.active}
                </p>
              </div>
            </div>
          </div>

          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <Clock className="h-8 w-8 text-yellow-400" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-mono font-bold text-slate-300 uppercase">
                  –ù–ï–ê–ö–¢–ò–í–ù–´–ï
                </p>
                <p className="text-2xl font-mono font-bold text-white">
                  {curatorStats.inactive}
                </p>
              </div>
            </div>
          </div>

          <div className="bg-slate-800 border-2 border-slate-600 p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <ShieldOff className="h-8 w-8 text-red-400" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-mono font-bold text-slate-300 uppercase">
                  –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–ï
                </p>
                <p className="text-2xl font-mono font-bold text-white">
                  {curatorStats.blocked}
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
        <div className="bg-slate-800 border-2 border-slate-600 p-6 mb-6">
          <div className="flex flex-col md:flex-row gap-4 items-center justify-between">
            <div className="flex flex-col md:flex-row gap-4 items-center">
              {/* –ü–æ–∏—Å–∫ */}
              <div className="relative">
                <label className="block text-xs font-mono font-bold text-slate-300 uppercase mb-1">
                  –ü–û–ò–°–ö:
                </label>
                <div className="relative">
                  <Search className="h-4 w-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400" />
                  <input
                    type="text"
                    placeholder="–ü–û –ò–ú–ï–ù–ò –ò–õ–ò EMAIL..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="pl-10 pr-4 py-2 w-80 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400"
                  />
                </div>
              </div>

              {/* –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
              <div>
                <label className="block text-xs font-mono font-bold text-slate-300 uppercase mb-1">
                  –°–¢–ê–¢–£–°:
                </label>
                <div className="flex items-center gap-2">
                  <Filter className="h-4 w-4 text-slate-400" />
                  <select
                    value={statusFilter}
                    onChange={(e) => setStatusFilter(e.target.value as any)}
                    className="px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono"
                  >
                    <option value="ALL">–í–°–ï –°–¢–ê–¢–£–°–´</option>
                    <option value="ACTIVE">–ê–ö–¢–ò–í–ù–´–ï</option>
                    <option value="INACTIVE">–ù–ï–ê–ö–¢–ò–í–ù–´–ï</option>
                    <option value="BLOCKED">–ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–ï</option>
                  </select>
                </div>
              </div>
            </div>

            <button
              onClick={() => refetch()}
              className="flex items-center gap-2 px-3 py-2 text-slate-300 border border-slate-600 font-mono font-bold uppercase"
            >
              <RefreshCw className="h-4 w-4" />
              –û–ë–ù–û–í–ò–¢–¨
            </button>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤ */}
        <div className="bg-slate-800 border-2 border-slate-600">
          {filteredCurators.length === 0 ? (
            <div className="text-center py-12">
              <Users className="h-16 w-16 text-slate-500 mx-auto mb-4" />
              <h3 className="text-lg font-mono font-bold text-white mb-2 uppercase">
                {curators.length === 0 ? "–ù–ï–¢ –ö–£–†–ê–¢–û–†–û–í" : "–ö–£–†–ê–¢–û–†–´ –ù–ï –ù–ê–ô–î–ï–ù–´"}
              </h3>
              <p className="text-slate-400 mb-4 font-mono">
                {curators.length === 0
                  ? "–°–û–ó–î–ê–ô–¢–ï –ü–ï–†–í–û–ì–û –ö–£–†–ê–¢–û–†–ê –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–ï–°–¢–ê–ú–ò"
                  : "–ü–û–ü–†–û–ë–£–ô–¢–ï –ò–ó–ú–ï–ù–ò–¢–¨ –ü–ê–†–ê–ú–ï–¢–†–´ –ü–û–ò–°–ö–ê"}
              </p>
              {curators.length === 0 && (
                <button
                  onClick={() => setShowCreateForm(true)}
                  className="inline-flex items-center gap-2 px-4 py-2 bg-blue-700 text-white border-2 border-blue-600 font-mono font-bold uppercase"
                >
                  <UserPlus className="h-4 w-4" />
                  –°–û–ó–î–ê–¢–¨ –ö–£–†–ê–¢–û–†–ê
                </button>
              )}
            </div>
          ) : (
            <div>
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã */}
              <div className="bg-slate-700 px-6 py-3 border-b-2 border-slate-600">
                <div className="flex items-center justify-between">
                  <span className="text-sm font-mono font-bold text-white uppercase">
                    –ö–£–†–ê–¢–û–†–´ ({filteredCurators.length})
                  </span>
                  <span className="text-sm text-slate-300 font-mono font-bold uppercase">
                    –î–ï–ô–°–¢–í–ò–Ø
                  </span>
                </div>
              </div>

              {/* –°–ø–∏—Å–æ–∫ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤ */}
              <div className="divide-y-2 divide-slate-700">
                {filteredCurators.map((curator) => (
                  <div
                    key={curator.$id}
                    className="px-6 py-4 bg-slate-800"
                  >
                    <div className="flex items-center justify-between">
                      <div className="flex-1">
                        <div className="flex items-center gap-3 mb-2">
                          <div>
                            <h3 className="text-sm font-mono font-bold text-white uppercase">
                              {curator.name}
                            </h3>
                            <div className="flex items-center gap-2 mt-1">
                              <Mail className="h-3 w-3 text-slate-400" />
                              <span className="text-sm text-slate-300 font-mono">
                                {curator.email}
                              </span>
                            </div>
                          </div>

                          {getStatusBadge(curator)}
                        </div>

                        <div className="flex items-center gap-4 text-xs text-slate-400 font-mono">
                          <div className="flex items-center gap-1">
                            <Calendar className="h-3 w-3" />
                            <span>–°–û–ó–î–ê–ù {formatDate(curator.$createdAt)}</span>
                          </div>
                        </div>
                      </div>

                      <div className="flex items-center gap-2">
                        {curator.isBlocked ? (
                          <button
                            onClick={() =>
                              handleUnblock(curator.$id, curator.name)
                            }
                            disabled={unblockUserMutation.isPending}
                            className="flex items-center gap-1 px-3 py-1.5 text-sm bg-green-800 text-green-200 border border-green-600 disabled:opacity-50 font-mono font-bold uppercase"
                          >
                            <Shield className="h-3 w-3" />
                            –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ê–¢–¨
                          </button>
                        ) : curator.isActive ? (
                          <>
                            <button
                              onClick={() =>
                                handleDeactivate(curator.$id, curator.name)
                              }
                              disabled={deactivateUserMutation.isPending}
                              className="flex items-center gap-1 px-3 py-1.5 text-sm bg-yellow-800 text-yellow-200 border border-yellow-600 disabled:opacity-50 font-mono font-bold uppercase"
                            >
                              <UserX className="h-3 w-3" />
                              –î–ï–ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨
                            </button>
                            <button
                              onClick={() =>
                                handleBlock(curator.$id, curator.name)
                              }
                              disabled={blockUserMutation.isPending}
                              className="flex items-center gap-1 px-3 py-1.5 text-sm bg-red-800 text-red-200 border border-red-600 disabled:opacity-50 font-mono font-bold uppercase"
                            >
                              <ShieldOff className="h-3 w-3" />
                              –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–¢–¨
                            </button>
                          </>
                        ) : (
                          <>
                            <button
                              onClick={() =>
                                handleActivate(curator.$id, curator.name)
                              }
                              disabled={activateUserMutation.isPending}
                              className="flex items-center gap-1 px-3 py-1.5 text-sm bg-green-800 text-green-200 border border-green-600 disabled:opacity-50 font-mono font-bold uppercase"
                            >
                              <UserCheck className="h-3 w-3" />
                              –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨
                            </button>
                            <button
                              onClick={() =>
                                handleBlock(curator.$id, curator.name)
                              }
                              disabled={blockUserMutation.isPending}
                              className="flex items-center gap-1 px-3 py-1.5 text-sm bg-red-800 text-red-200 border border-red-600 disabled:opacity-50 font-mono font-bold uppercase"
                            >
                              <ShieldOff className="h-3 w-3" />
                              –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–¢–¨
                            </button>
                          </>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä–∞—Ç–æ—Ä–∞ */}
        {showCreateForm && (
          <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50">
            <div className="bg-slate-800 border-2 border-slate-600 p-6 max-w-md w-full mx-4">
              <h3 className="text-lg font-mono font-bold text-white mb-4 uppercase border-b border-slate-600 pb-2">
                –°–û–ó–î–ê–¢–¨ –ù–û–í–û–ì–û –ö–£–†–ê–¢–û–†–ê
              </h3>

              <form onSubmit={handleCreateCurator} className="space-y-4">
                <div>
                  <label
                    htmlFor="curatorName"
                    className="block text-sm font-mono font-bold text-slate-300 mb-1 uppercase"
                  >
                    –ü–û–õ–ù–û–ï –ò–ú–Ø:
                  </label>
                  <input
                    id="curatorName"
                    type="text"
                    value={newCuratorData.name}
                    onChange={(e) =>
                      setNewCuratorData((prev) => ({
                        ...prev,
                        name: e.target.value,
                      }))
                    }
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400"
                    placeholder="–í–í–ï–î–ò–¢–ï –ü–û–õ–ù–û–ï –ò–ú–Ø –ö–£–†–ê–¢–û–†–ê"
                    required
                  />
                </div>

                <div>
                  <label
                    htmlFor="curatorEmail"
                    className="block text-sm font-mono font-bold text-slate-300 mb-1 uppercase"
                  >
                    EMAIL –ê–î–†–ï–°:
                  </label>
                  <input
                    id="curatorEmail"
                    type="email"
                    value={newCuratorData.email}
                    onChange={(e) =>
                      setNewCuratorData((prev) => ({
                        ...prev,
                        email: e.target.value,
                      }))
                    }
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400"
                    placeholder="CURATOR@EXAMPLE.COM"
                    required
                  />
                </div>

                <div>
                  <label
                    htmlFor="curatorPassword"
                    className="block text-sm font-mono font-bold text-slate-300 mb-1 uppercase"
                  >
                    –ü–ê–†–û–õ–¨:
                  </label>
                  <input
                    id="curatorPassword"
                    type="password"
                    value={newCuratorData.password}
                    onChange={(e) =>
                      setNewCuratorData((prev) => ({
                        ...prev,
                        password: e.target.value,
                      }))
                    }
                    className="w-full px-3 py-2 border-2 border-slate-600 bg-slate-700 text-white font-mono placeholder-slate-400"
                    placeholder="–ú–ò–ù–ò–ú–£–ú 8 –°–ò–ú–í–û–õ–û–í"
                    minLength={8}
                    required
                  />
                </div>

                <div className="bg-blue-900 border-2 border-blue-600 p-3">
                  <p className="text-sm text-blue-200 font-mono">
                    <strong className="font-bold uppercase">–í–ê–ñ–ù–û:</strong> –ö–£–†–ê–¢–û–† –ë–£–î–ï–¢ –°–û–ó–î–ê–ù –í –ù–ï–ê–ö–¢–ò–í–ù–û–ú
                    –°–û–°–¢–û–Ø–ù–ò–ò –ò –ü–û–¢–†–ï–ë–£–ï–¢ –ê–ö–¢–ò–í–ê–¶–ò–ò –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–ú.
                  </p>
                </div>

                <div className="flex gap-3 pt-4">
                  <button
                    type="button"
                    onClick={() => {
                      setShowCreateForm(false);
                      setNewCuratorData({ name: "", email: "", password: "" });
                    }}
                    className="flex-1 px-4 py-2 text-slate-300 bg-slate-700 border-2 border-slate-600 font-mono font-bold uppercase"
                  >
                    –û–¢–ú–ï–ù–ê
                  </button>
                  <button
                    type="submit"
                    disabled={createUserMutation.isPending}
                    className="flex-1 px-4 py-2 text-white bg-blue-700 border-2 border-blue-600 disabled:opacity-50 font-mono font-bold uppercase"
                  >
                    {createUserMutation.isPending ? "–°–û–ó–î–ê–ù–ò–ï..." : "–°–û–ó–î–ê–¢–¨"}
                  </button>
                </div>
              </form>
            </div>
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
        <div className="mt-6 bg-slate-800 border-2 border-slate-600 p-6">
          <div className="flex items-start gap-3">
            <AlertTriangle className="h-5 w-5 text-orange-400 mt-0.5" />
            <div>
              <h3 className="text-sm font-mono font-bold text-white mb-2 uppercase">
                –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –ö–£–†–ê–¢–û–†–û–í:
              </h3>
              <ul className="text-sm text-slate-300 font-mono space-y-1">
                <li>‚Ä¢ –°–û–ó–î–ê–ù–ò–ï –ò –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –¢–ï–°–¢–û–í –î–õ–Ø –°–í–û–ò–• –ù–ê–ü–†–ê–í–õ–ï–ù–ò–ô</li>
                <li>‚Ä¢ –£–ü–†–ê–í–õ–ï–ù–ò–ï –í–û–ü–†–û–°–ê–ú–ò –ò –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø</li>
                <li>‚Ä¢ –ü–†–û–°–ú–û–¢–† –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ò –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ê–ë–ò–¢–£–†–ò–ï–ù–¢–û–í</li>
                <li>‚Ä¢ –ê–ö–¢–ò–í–ê–¶–ò–Ø –ê–ë–ò–¢–£–†–ò–ï–ù–¢–û–í –í –°–í–û–ò–• –ò–ù–°–¢–ò–¢–£–¢–ê–•</li>
                <li>‚Ä¢ –≠–ö–°–ü–û–†–¢ –û–¢–ß–ï–¢–û–í –ò –ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–•</li>
                <li>‚Ä¢ –ò–ú–ü–û–†–¢ –¢–ï–°–¢–û–í –ò–ó EXCEL –§–ê–ô–õ–û–í</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}